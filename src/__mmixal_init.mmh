%%
% MMIX support library for various purposes.
%
% Copyright (C) 2013-2014 Matthias Maier <tamiko@kyomu.43-1.org>
%
% Permission is hereby granted, free of charge, to any person
% obtaining a copy of this software and associated documentation files
% (the "Software"), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge,
% publish, distribute, sublicense, and/or sell copies of the Software,
% and to permit persons to whom the Software is furnished to do so,
% subject to the following conditions:
%
% The above copyright notice and this permission notice shall be
% included in all copies or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
% EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
% NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
% BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
% ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
% CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.
%%

%
% :MM:__INIT:
%
% Internal header file.
%
% Setup internal library routines and data structures.
%
            SWYM

#ifndef __MM_INTERNAL
#error Inclusion of internal header file __mmixal_init.mmh
#endif

#ifndef __MMIXAL
#error Inclusion of internal header file __mmixal_init.mmh for foreign assembler
#endif

#ifndef __MM_MMIXAL_INIT_MMH
#define __MM_MMIXAL_INIT_MMH


%
% Initialize data segment:
%

            PREFIX      :MM:__INIT:

__Pos1      IS          @
#include "__mmixal_data_segment.mmh"
            PREFIX      :MM:__INIT:
            LOC         __Pos1

%
% Include basic functionality and static literals:
%
            LOC         (@+#FF)&-#100
#include "__sys.mmh"
#include "__error.mmh"
#ifdef __MMIX_SIM
#include "__mmix_sim_raw_heap.mmh"
#else
#error No implementation of :MM:__RAW_SIM available for your platform.
#endif

%
% Hijack program startup to do some sanity checks.
%

            PREFIX      :MM:__INIT:
t           IS          $255
OnStartup   PUT         :rW,$255
            PUT         :rB,$255
            SETML       $255,#F700
            PUT         :rX,$255
            PUT         :rJ,$3
            RESUME % Use resume for a pristine entry into Main
__Pos2      IS          @
            %LOC         #F0
            %JMP         OnStartup
            LOC         __Pos2

            PREFIX      :

#endif /* __MM_MMIXAL_INIT_MMH */
