#!/bin/bash
set -eu

include_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")/../include"
lib_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")/../lib"

cpp=cpp
cpp_args=( "-D__GNU_AS" "-D__MMIXWARE" "-I$include_dir" )
as=mmix-as
as_args=( "-linker-allocated-gregs" )
ld=mmix-ld
ld_args=( "-L$lib_dir" )
out_file=

tmpdir="$(mktemp -d /tmp/mmixc.XXXXXXXXXX)"

verbose=false
preprocess_only=false
compile_only=false
keep_tmp=false

print_help() {
  echo "Usage: mmixc [-Idir...] [-Ldir...] [-llib...] [-o filename] [-E] [-c] [-keep-tmp|-save-tmps] [-v|-verbose] [-h|-help] [source files]"
  echo ""
  echo "A minimal wrapper around cpp, mmix-as, mmix-ld"
  echo ""
  echo "Options:"
  echo "  -I<directory>  : add directory to the list of include directories passed to cpp"
  echo "  -L<directory>  : add directory to the list of library directories passed to mmix-ld"
  echo "  -l<archive>    : an archive to link against (passed to mmix-ld)"
  echo "  -o <filename>  : filename of linked proglram (passed to mmix-ld)"
  echo "  -E             : only run preprocessor (cpp) on given source files (creates *.i files)"
  echo "  -c             : preprocessor (cpp) and assembler (mmix-as) on given source files (creates *.o files)"
  echo "  -keep-tmp      : keep temporary directories (implies -verbose)"
  echo "  -save-tmps     : same as -keep-tmp"
  echo "  -v (-verbose)  : show preprocessor, assembler, linker invocation"
  echo "  -h (-help)     : print this help message"
}

until [[ "$@" == "" ]]; do
  if [[ "$1" == -I* ]]; then
    cpp_args+=( "$1" )
  elif [[ "$1" == -L* || "$1" == -l* ]]; then
    ld_args+=( "$1" )
  elif [[ "$1" == "-o" ]]; then
    shift
    out_file="$1"
  elif [[ "$1" == "-h" || "$1" == "-help" ]]; then
    print_help
    exit 1
  elif [[ "$1" == "-v" || "$1" == "-verbose" ]]; then
    verbose=true
  elif [[ "$1" == "-E" ]]; then
    preprocess_only=true
  elif [[ "$1" == "-c" ]]; then
    compile_only=true
  elif [[ "$1" == "-keep-tmp" || "$1" == "-save-tmps" ]]; then
    keep_tmp=true
    verbose=true
  else
    src_files+=( "$1" )
  fi
  shift
done

if [[ "$out_file" == "" ]]; then
  out_file="a.mmo"
fi

$keep_tmp && echo "Temporary directory \"$tmpdir\" preserved."

for i in "${src_files[@]}"; do
  pre="$tmpdir/$(basename -s .mms $i)$RANDOM.i"
  $preprocess_only && pre=$(basename -s .mms $i).i
  obj="$tmpdir/$(basename -s .mms $i)$RANDOM.o"
  $compile_only && obj=$(basename -s .mms $i).o

  obj_files+=( "$obj" )

  $verbose && echo "$cpp" "${cpp_args[@]:+${cpp_args[@]}}" "$i" -o "$pre"
  if "$cpp" "${cpp_args[@]:+${cpp_args[@]}}" "$i" -o "$pre"; then
    if ! $preprocess_only; then
      $verbose && echo "$as" "${as_args[@]:+${as_args[@]}}" "$pre" -o "$obj"
      if ! "$as" "${as_args[@]:+${as_args[@]}}" "$pre" -o "$obj"; then
        $keep_tmp || rm -rf "$tmpdir"
        exit 1
      fi
    fi

  else
    $keep_tmp || rm -rf "$tmpdir"
    exit 1
  fi
done


if ! $compile_only && ! $preprocess_only; then
  $verbose && echo "$ld" -o "$out_file" \
    "${obj_files[@]:+${obj_files[@]}}" "${ld_args[@]:+${ld_args[@]}}"

  if "$ld" -o "$out_file" "${obj_files[@]:+${obj_files[@]}}" \
    "${ld_args[@]:+${ld_args[@]}}" ; then
    $keep_tmp || rm -rf "$tmpdir"
  else
    $keep_tmp || rm -rf "$tmpdir"
    exit 1
  fi
fi

$keep_tmp || rm -rf "$tmpdir"
