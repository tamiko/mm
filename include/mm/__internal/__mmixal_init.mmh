%%
% MMIX support library for various purposes.
%
% Copyright (C) 2013-2014 Matthias Maier <tamiko@kyomu.43-1.org>
%
% Permission is hereby granted, free of charge, to any person
% obtaining a copy of this software and associated documentation files
% (the "Software"), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge,
% publish, distribute, sublicense, and/or sell copies of the Software,
% and to permit persons to whom the Software is furnished to do so,
% subject to the following conditions:
%
% The above copyright notice and this permission notice shall be
% included in all copies or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
% EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
% NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
% BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
% ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
% CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.
%%

%
% :MM:__INIT:
%
% Internal header file.
%
% Setup internal library routines and data structures.
%

#ifndef __MM_INTERNAL
#error Inclusion of internal header file __mmixal_init.mmh
#endif

#ifndef __MMIXAL
#error Inclusion of internal header file __mmixal_init.mmh for foreign assembler
#endif

#ifndef __MMIXWARE
#error Incluseion of internal header file __mmixal_init.mmh for non mmixware platform
#endif

#ifndef __MM_MMIXAL_INIT_MMH
#define __MM_MMIXAL_INIT_MMH


%
% Assemble basic library initalization code
%

            % advance LOC by #100 and further align to #100
            LOC         (@+#100)&-#100
#include <mm/__internal/__init.mmh>

            PREFIX      :MM:__INIT:
__Pos       IS          @
            PREFIX      :

%
% Hijack program startup by registering :MM:__INIT:OnStartup as entry point
%

%            LOC         #F0
%            JMP         :MM:__INIT:OnStartup

%
% Initialize data segment:
%

#ifndef MM_DATA_SEGMENT_ADDR
#define MM_DATA_SEGMENT_ADDR :Data_Segment+#1100000000000000
#endif

            LOC         MM_DATA_SEGMENT_ADDR
#undef MM_DATA_SEGMENT_ADDR
#include "__strs.mmh"
            LOC         (@+#7)&-#8
            PREFIX      :MM:__SYS:
AtExitAddr  OCTA        #0000000000000000
AtAbortAddr OCTA        #0000000000000000
AtErrorAddr OCTA        #0000000000000000
            LOC         (@+#7)&-#8
            PREFIX      :MM:__FILE:
Pool        BYTE        #EE,#EE,#EE
            LOC         @+253*1
            LOC         (@+#7)&-#8
            PREFIX      :MM:__INIT:
Buffer      IS          @
            LOC         @+128*8
            PREFIX      :

            LOC         :MM:__INIT:__Pos

%
% Initialize low level HEAP implementation:
%

#include "__sys.mmh"
#include "__error.mmh"
#include "__raw_heap.mmh"

#endif /* __MM_MMIXAL_INIT_MMH */
